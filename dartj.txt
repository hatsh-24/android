//bean
@PersistenceContext(unitName = "msapu")
    EntityManager em;

    public Collection<TUsers> getAllUsers() {
        return em.createNamedQuery("TUsers.findAll").getResultList();
    }

    public void insertUser(TUsers user) {
    em.getTransaction().begin();  // Start transaction
    em.persist(user);             // Persist the user entity
    em.getTransaction().commit(); // Commit the transaction
}
    public void deleteUser(Long userId) {
    em.getTransaction().begin();  // Start transaction
    TUsers user = em.find(TUsers.class, userId); // Find the user by ID
    if (user != null) {
        em.remove(user);           // Remove the user entity
    }
    em.getTransaction().commit();  // Commit the transaction
}

//exampleservice
@Inject
Examplebean eb;
@GET
    @Path("/getHello")
    @Produces(MediaType.TEXT_HTML)
    public String getHello() {
        return "<h1>Hello WOrld</h1>";
    }

    @GET
    @Path("/getUsers")
    @Produces(MediaType.APPLICATION_JSON)
    public Collection<TUsers> getAllUsers() {
        return eb.getAllUsers();
    }

@POST
@Path("/addUser")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public Response insertUser(TUsers user) {
    boolean success = eb.insertUser(user);
    if (success) {
        return Response.status(Response.Status.CREATED).entity("User added successfully").build();
    } else {
        return Response.status(Response.Status.BAD_REQUEST).entity("Failed to add user").build();
    }
}

@DELETE
@Path("/deleteUser/{id}")
@Produces(MediaType.APPLICATION_JSON)
public Response deleteUser(@PathParam("id") int id) {
    boolean success = eb.deleteUser(id);
    if (success) {
        return Response.status(Response.Status.OK).entity("User deleted successfully").build();
    } else {
        return Response.status(Response.Status.NOT_FOUND).entity("User not found").build();
    }
}

//micro properties
apiUrl/mp-rest/url= http://localhost:8085/ResourceApp/rest/example

//interface
@RegisterRestClient(conigKey = apiUrl)
// Method to get all users
    @GET
    @Path("/getUsers")
    @Produces(MediaType.APPLICATION_JSON)
    public Collection<TUsers> getAllUsers();

    // Method to insert a user
    @POST
    @Path("/addUser")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public boolean insertUser(TUsers user);

    // Method to delete a user
    @DELETE
    @Path("/deleteUser/{id}")
    @Produces(MediaType.APPLICATION_JSON)
    public boolean deleteUser(@PathParam("id") int id);

java -jar payara-micro-5.2022.2.jar --deploy MSAApp/artifact/MSAApp.war --port 8085
